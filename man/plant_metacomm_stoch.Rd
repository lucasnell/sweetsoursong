% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plant_metacomm_stoch.R
\name{plant_metacomm_stoch}
\alias{plant_metacomm_stoch}
\title{Simulate plant metacommunities with stochasticity.}
\usage{
plant_metacomm_stoch(
  np,
  u,
  Y0 = NULL,
  B0 = NULL,
  m = 0.1,
  d_yp = 1.1,
  d_b0 = 0.3,
  d_bp = 0.4,
  g_yp = 0.005,
  g_b0 = 0.02,
  g_bp = 0.002,
  L_0 = 0.5,
  X = 0,
  n_sigma = 200,
  season_len = 150,
  season_surv = 0.1,
  q = 1,
  n_reps = 100,
  dt = 0.1,
  max_t = 3000,
  burnin = 0,
  save_every = NULL,
  no_immig = TRUE,
  open_sys = TRUE,
  begin_end = FALSE,
  summarize = "none"
)
}
\arguments{
\item{np}{Number of plants.}

\item{u}{Affects how strongly pollinators are attracted to plants with the
greatest proportion of palatable nectar.}

\item{Y0}{Starting yeast proportions.
If \code{NULL}, both yeast and bacteria are evenly distributed among
plants where \code{all(Y0 + B0) == 0.5}.
If \code{NULL}, \code{B0} must also be.}

\item{B0}{Starting bacteria proportions.
If \code{NULL}, both yeast and bacteria are evenly distributed among
plants where \code{all(Y0 + B0) == 0.5}.
If \code{NULL}, \code{Y0} must also be.}

\item{m}{Flower senescence.}

\item{d_yp}{Pollinator-dependent, within-plant dispersal rate for yeast.}

\item{d_b0}{Pollinator-independent, within-plant dispersal rate for bacteria.}

\item{d_bp}{Pollinator-dependent, within-plant dispersal rate for bacteria.}

\item{g_yp}{Pollinator-dependent rate of dispersal from sources other
than the focal plant for yeast.
This is overridden by the \code{no_immig} parameter by default!}

\item{g_b0}{Pollinator-independent rate of dispersal from sources other
than the focal plant for bacteria.
This is overridden by the \code{no_immig} parameter by default!}

\item{g_bp}{Pollinator-dependent rate of dispersal from sources other
than the focal plant for bacteria.
This is overridden by the \code{no_immig} parameter by default!}

\item{L_0}{Half saturation ratio for the effect of pollinators on dispersal.}

\item{X}{Attraction of pollinators to non-focal plants.}

\item{n_sigma}{Sample size of the approximated binomial distribution that
generates stochasticity at each time step.}

\item{season_len}{Length of seasons. Set to \code{NULL} to not have seasons.}

\item{season_surv}{Survival of microbes from the end of one season to
the start of the next.}

\item{q}{Single numeric dictating to what extent new-season
abundances are affected by the previous season's abundances versus
random noise.
Defaults to \code{1}.}

\item{n_reps}{Number of reps to simulate.}

\item{dt}{Time step for ODE solver.}

\item{max_t}{Number of days to simulate.}

\item{burnin}{Number of days to count as "burn-in" and not record
in output. This can help to avoid vector memory limit error in
simulations that use many plants.}

\item{save_every}{Output will be stored every \code{save_every} days.
This argument is ignored if \code{summarize = "rep"} or if
\code{begin_end = TRUE}.
Must be a multiple of \code{dt}.
Defaults to \code{NULL}, which results in all time points being saved.}

\item{no_immig}{Single logical for whether to disallow immigration, which
will (if set to \code{TRUE}), override all the \verb{g_*} parameters and set them
to zero. Defaults to \code{TRUE}.}

\item{open_sys}{Single logical for whether immigration is "open" and comes
from outside the system. If \code{FALSE}, immigration for each species
is affected by their mean abundance across all plants.
If \code{TRUE}, immigration is a constant trickle from outside the landscape.
Defaults to \code{TRUE}.}

\item{begin_end}{Logical for whether to just include output from the
beginning and end of each season. This overrides \code{save_every}.
Will throw an error if this is \code{TRUE} and \code{summarize} is \code{"rep"}
or if \code{season_len} is \code{NULL}.
Defaults to \code{FALSE}.}

\item{summarize}{Single string for how and whether to summarize output.
If \code{"none"}, no summarizing happens, and the output is a time series of
microbial abundances and pollinator visits by plant.
If \code{"time"}, summarizing happens by rep and time point, so you'll get a
single row of output per rep and time step.
Each row will have the mean dissimilarity between plant communities
(\code{"BC"}), mean species diversity (\code{"H"}), total yeast abundance
across all plants (\code{"sumY"}), and total bacteria abundance (\code{"sumB"}).
If \code{"rep"}, summarizing happens by rep, so you'll get a single row
of output per rep.
Each row will have the mean dissimilarity between plant communities
with median taken through time (\code{"BC"}),
mean species diversity (\code{"H"}), minimum total yeast abundance
through time (\code{"minY"}), and minimum total bacteria abundance (\code{"minB"}).
Defaults to \code{"none"}.}
}
\value{
A data frame of yeast, bacteria, and pollinator densities at each
plant through time and for each repetition.
}
\description{
Simulate plant metacommunities with stochasticity.
}
